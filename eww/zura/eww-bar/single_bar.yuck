(defwidget barcenter []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sep []
  (box :class "module-2" :vexpand "false" :hexpand "false"
    (label :class "separ" :text "|")))


(defwidget cal []
	(box :class "cal" :orientation "v"
	(box :class "cal-in"
	(calendar :class "cal" 
			  :day calendar_day 
			  :year calendar_year))))

(defwindow calendar
	:geometry (geometry :x "0px" 
						:y "7%" 
                        :anchor "top right"
						:width "270px" 
						:height "60px")
(cal))


(defwidget clock_module []
    (box :class "module" :space-evenly "false" :orientation "h" :spacing "1" 
      (label :text clock_time :class "clock_time_class2" )
      (label :text "ï›˜" :class "clock_time_sep2" )
      (label :class "clock_minute_class2" :text clock_minute )
	      (button :onclick "scripts/pop calendar" "â™Š")
    ))
  
(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
      (metric :label "ðŸ”Š"
            :class "volume_metric"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
      (metric :label "ï¡š" :class "mem_metric"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    
    (clock_module)))

;; music
(defwidget music [] 
		(box 
			(box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
					(label :class "song2" :halign "start" :wrap "false" :limit-width 20 :text "ðŸŽµ ${song_artist} - ")
					(label :class "artist2" :halign "start" :wrap "false" :limit-width 20 :text song ))))

(defwidget metric [label value onchange]
(box :orientation "h"
     :class "metric"
     :space-evenly false
  (box :class "label" label)
  (scale :min 0
         :max 101
         :active {onchange != ""}
         :value value
         :onchange onchange)))

;; 
;;
;;      WORKSPACE
;;
;;

(defwidget workspaces []
(literal :content workspace))

;;
;;
;; *WINDOWS **********************************************************
;;
;;

(defwindow top_bar1 
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x '0%'
                      :y '0%'
                      :width "100%"
                      :height "10px"
                      :anchor "top center" )
  :reserve (struts :side "top" :distance "10px")
(barcenter))


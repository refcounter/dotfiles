
(defwidget music []

  (box :orientation "v" :space-evenly false :class "musicplayer" :halign "center" :valign "center" :hexpand true :vexpand true 
  			(box :class "song_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
    (label :class "label-control" :text "${music_current}" :halign "center" :limit-width 50 :show-truncated true :hexpand true :vexpand true)
    (box :orientation "h" :space-evenly false :class "controls" :halign "center" :valign "center" :spacing 20
         (button :style "color: #d8dee9;" :onclick "mpc -q toggle && notify-send -u low -t 1800 ${music_current}" "懶")
         (button :style "color: #e5e9f0;" :onclick "mpc -q stop" "")
         (button :style "color: #eceff4;" :onclick "mpc -q next && notify-send -u low -t 1800 ${music_current}" "")
         (button :style "color: #e8e8e8;" :onclick "mpc -q prev && notify0send -u low -t 1800 ${music_current}" ""))))

(defwidget music [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
				(box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
					(label :class "song" :halign "start" :wrap "false"  :text song)
					(label :class "artist" :halign "start" :wrap "false" :text song_artist)))
			(box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/music_info --prev")
				(button :style "background-image: url('${song_status}');" :class "playbutton" :onclick "scripts/music_info --toggle")
				(button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/music_info --next"))))

(defwindow bspwm
  :monitor 0
  :geometry (geometry :x '0px'
                      :y '0px'
                      :width "10px"
                      :height "30px"
                      :anchor "top left")
  :reserve (struts :side "top" :distance "30px")
  :stacking "fg"
  :wm-ignore false
  :windowtype "dock"
  (workspaces))

(defwindow stats
  :monitor 0
  :geometry (geometry :x '0px'
                      :y '0px'
                      :height "30px"
                      :anchor "top right")
  :reserve (struts :side "top" :distance "30px")
  :stacking "fg"
(sidestuff))

"▶️")
